"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –¥–∏–∞–ª–æ–≥–æ–≤.

–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–∏–∞–ª–æ–≥–æ–≤ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from loguru import logger
from app.core.database import get_db_session
from app.models.dialog import Dialog, DialogQuestion, DialogAnswer
from app.core.database import engine


async def create_dialog_tables():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–∏–∞–ª–æ–≥–æ–≤."""
    
    try:
        logger.info("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–∏–∞–ª–æ–≥–æ–≤...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        async with engine.begin() as conn:
            await conn.run_sync(Dialog.metadata.create_all)
            await conn.run_sync(DialogQuestion.metadata.create_all)
            await conn.run_sync(DialogAnswer.metadata.create_all)
        
        logger.info("‚úÖ –¢–∞–±–ª–∏—Ü—ã –¥–∏–∞–ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        async with get_db_session() as session:
            from sqlalchemy import text
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É dialogs
            result = await session.execute(text("SELECT name FROM sqlite_master WHERE type='table' AND name='dialogs'"))
            if result.fetchone():
                logger.info("‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'dialogs' —Å–æ–∑–¥–∞–Ω–∞")
            else:
                logger.error("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'dialogs' –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É dialog_questions
            result = await session.execute(text("SELECT name FROM sqlite_master WHERE type='table' AND name='dialog_questions'"))
            if result.fetchone():
                logger.info("‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'dialog_questions' —Å–æ–∑–¥–∞–Ω–∞")
            else:
                logger.error("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'dialog_questions' –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É dialog_answers
            result = await session.execute(text("SELECT name FROM sqlite_master WHERE type='table' AND name='dialog_answers'"))
            if result.fetchone():
                logger.info("‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'dialog_answers' —Å–æ–∑–¥–∞–Ω–∞")
            else:
                logger.error("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'dialog_answers' –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
        
        logger.info("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –¥–∏–∞–ª–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –¥–∏–∞–ª–æ–≥–æ–≤: {e}")
        raise


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    try:
        logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Ç–∞–±–ª–∏—Ü –¥–∏–∞–ª–æ–≥–æ–≤...")
        await create_dialog_tables()
        logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())
